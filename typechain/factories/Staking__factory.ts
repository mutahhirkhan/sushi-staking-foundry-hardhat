/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_pilot",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "leave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pilot",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "pilotBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "xPilotBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620027f1380380620027f18339818101604052810190620000379190620002ec565b6040518060400160405280600981526020017f50696c6f744361666500000000000000000000000000000000000000000000008152506040518060400160405280600681526020017f7850494c4f5400000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620001be565b508060049080519060200190620000d4929190620001be565b5050506200010b7f4e4ee411f46724ebbbf42a21e4ca6ba5dd1443f690438d1f77f818f973e4f26e60001b620001bb60201b60201c565b6200013f7fddc06ea7365840f63fee6dadcad15d544b3cf917fbfe74703456260c62c4785d60001b620001bb60201b60201c565b620001737ffc54382bf4f91c2ad9de953b78a8f1997c90627f6d1b1aeed8298adda47f819060001b620001bb60201b60201c565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000382565b50565b828054620001cc906200034d565b90600052602060002090601f016020900481019282620001f057600085556200023c565b82601f106200020b57805160ff19168380011785556200023c565b828001600101855582156200023c579182015b828111156200023b5782518255916020019190600101906200021e565b5b5090506200024b91906200024f565b5090565b5b808211156200026a57600081600090555060010162000250565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002a08262000273565b9050919050565b6000620002b48262000293565b9050919050565b620002c681620002a7565b8114620002d257600080fd5b50565b600081519050620002e681620002bb565b92915050565b6000602082840312156200030557620003046200026e565b5b60006200031584828501620002d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200036657607f821691505b6020821081036200037c576200037b6200031e565b5b50919050565b61245f80620003926000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637afec1d011610097578063a59f3e0c11610066578063a59f3e0c146102e9578063a9059cbb14610305578063bb4a1d3a14610335578063dd62ed3e1461035357610100565b80637afec1d01461023b57806395d89b411461026b5780639cd3da6614610289578063a457c2d7146102b957610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806367dfd4c9146101ef57806370a082311461020b57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610383565b60405161011a91906118d0565b60405180910390f35b61013d6004803603810190610138919061198b565b610415565b60405161014a91906119e6565b60405180910390f35b61015b610438565b6040516101689190611a10565b60405180910390f35b61018b60048036038101906101869190611a2b565b610442565b60405161019891906119e6565b60405180910390f35b6101a9610471565b6040516101b69190611a9a565b60405180910390f35b6101d960048036038101906101d4919061198b565b61047a565b6040516101e691906119e6565b60405180910390f35b61020960048036038101906102049190611ab5565b6104b1565b005b61022560048036038101906102209190611ae2565b6107af565b6040516102329190611a10565b60405180910390f35b61025560048036038101906102509190611ae2565b6107f7565b6040516102629190611a10565b60405180910390f35b610273610920565b60405161028091906118d0565b60405180910390f35b6102a3600480360381019061029e9190611ae2565b6109b2565b6040516102b09190611a10565b60405180910390f35b6102d360048036038101906102ce919061198b565b610a48565b6040516102e091906119e6565b60405180910390f35b61030360048036038101906102fe9190611ab5565b610abf565b005b61031f600480360381019061031a919061198b565b610f49565b60405161032c91906119e6565b60405180910390f35b61033d610f6c565b60405161034a9190611b6e565b60405180910390f35b61036d60048036038101906103689190611b89565b610f92565b60405161037a9190611a10565b60405180910390f35b60606003805461039290611bf8565b80601f01602080910402602001604051908101604052809291908181526020018280546103be90611bf8565b801561040b5780601f106103e05761010080835404028352916020019161040b565b820191906000526020600020905b8154815290600101906020018083116103ee57829003601f168201915b5050505050905090565b600080610420611019565b905061042d818585611021565b600191505092915050565b6000600254905090565b60008061044d611019565b905061045a8582856111ea565b610465858585611276565b60019150509392505050565b60006012905090565b600080610485611019565b90506104a68185856104978589610f92565b6104a19190611c58565b611021565b600191505092915050565b6104dd7f11f9da73bf20be5e7a2917c78de9f245b3a7873f4bffcaf0621fd1ea70f9ae8c60001b6114f5565b6105097f2b132b481e0a5a848180cec5f3681e1b9298be563abf4229cef749cc83ea146160001b6114f5565b6105357fbc553e8e83df5aca3c670bd4a5c6636bfef5697ef949065643e3168228dda6f460001b6114f5565b600061053f610438565b905061056d7fdb8e55105063939dda0ccfe97f4824d7aadf3b865088d92116425167a139815760001b6114f5565b6105997f15aaf5b0ab711186bb3ece2219c959b3f7780c3f6ed4fc124d72b0b84e2787fa60001b6114f5565b600081600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105f79190611cbd565b602060405180830381865afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106389190611ced565b846106439190611d1a565b61064d9190611da3565b905061067b7fd01be5b9cc371435d0ff9c25f4462e262a090f1470d96e611ff0e8bf2dcd507460001b6114f5565b6106a77f267e1ebf3b0dd615266bcd1048fbc9a4b9a7e45b69ff5b8f1d5d5d2b1a7c9a6160001b6114f5565b6106b133846114f8565b6106dd7f301a5752c118654f4d28710c4a8af7fb480442bd739aa402dcdc51fe6e09d88360001b6114f5565b6107097fe0f8ad3fff646b63aeface7642837e10bf7fc85ea4912e848f39008ab8f94ba360001b6114f5565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610766929190611dd4565b6020604051808303816000875af1158015610785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a99190611e29565b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006108257f3df103a92dc4f9954eb9b027ef9f02d288ad08257c7606e687fe1de731039db860001b6114f5565b6108517f7b7a7c6d14ed2be9d843b393f29b5706930cb2e9ef54864064c2448ea039e36660001b6114f5565b61087d7fe231f71795a38ea59b4c358b335a869ccdb20b4c437d3758aac3bf86707afb1b60001b6114f5565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016108d89190611cbd565b602060405180830381865afa1580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190611ced565b9050919050565b60606004805461092f90611bf8565b80601f016020809104026020016040519081016040528092919081815260200182805461095b90611bf8565b80156109a85780601f1061097d576101008083540402835291602001916109a8565b820191906000526020600020905b81548152906001019060200180831161098b57829003601f168201915b5050505050905090565b60006109e07f93eb9b60c373f8ad4ba85f23ce975d5e5b4052190b82c0c78c8d48d6be3c6f8d60001b6114f5565b610a0c7fa2725b35855a12d607c01612364e4a1c5b1065734c23970b9cb86bead1e9959f60001b6114f5565b610a387fa1bff989a863d8756e36a243da776cb04f08110265a3224521b0bde1ba74110d60001b6114f5565b610a41826107af565b9050919050565b600080610a53611019565b90506000610a618286610f92565b905083811015610aa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9d90611ec8565b60405180910390fd5b610ab38286868403611021565b60019250505092915050565b610aeb7f6b4b591a240a794f40775976b94f0aaee26d633972e0db16d069690c38df524160001b6114f5565b610b177f7a28c4cd74c8c578615295d54c6d08a0fb2446c6ca8d194b7e034da543986b3f60001b6114f5565b610b437f5a1036464096d735692b078c9a6efbead211b55f82ad8459bb2e81a52db1010760001b6114f5565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ba09190611cbd565b602060405180830381865afa158015610bbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be19190611ced565b9050610c0f7ffbb09f1abaf6a602f46f19add34062afdc9aa06e38284a39071c6eeccd83aaf260001b6114f5565b610c3b7f61f9cafa06f2a4c67942e14422df5869fb33f1592261bb6c1aeb990fcfd25efe60001b6114f5565b6000610c45610438565b9050610c737f6086ff332c71c9986d6c898718afe8e824725be2da9eef3e19614b0fc236c1fd60001b6114f5565b610c9f7fe38684a123b71f37807e2829ea90cd47f48f8b519132c3c337acae92f9b69e7760001b6114f5565b6000811480610cae5750600082145b15610d4657610cdf7f5a45ef7e42121e0bf7184ee9f3d6fc285a53c5c65a022465ac019b0b982baf5a60001b6114f5565b610d0b7faaff5117468f01f3f369b3495633f24b043b0afb5cc12a33c5deb3c7fb46a25660001b6114f5565b610d377fab81d4d781aa2d59972fd37121c8eedf4cdf4dd397e854732eccf5422b36b8b060001b6114f5565b610d4133846116ce565b610e49565b610d727fcba6378359c0e5c9baa135e656bf6b0379c96e5e5364f093cdf675b30af50fe360001b6114f5565b610d9e7fc294912269b32af394ad70bd831bf9754954d1bb407a7b86696d7f8c9222e91660001b6114f5565b610dca7f13727b5f3138418350551dbc7ed71a697f7281f6b329f010de2c804fd9d1d8f660001b6114f5565b6000828285610dd99190611d1a565b610de39190611da3565b9050610e117f50bf8481cf79bcf639dc9be6353156aafef7b70dd611bec82342b2e55493945060001b6114f5565b610e3d7f03452a534d7bb90d7c01be1c10acc584c323a0e45fe74b35b0465630eadf4a6760001b6114f5565b610e4733826116ce565b505b610e757fce7621ff1aac1c486e95a21b99089305e4c4430280c98872e5f6c01c8356361760001b6114f5565b610ea17ff94b2b0ae97509744cd90b363b31a0f7e2ce212b3d167c9e9763b602cdd7d3eb60001b6114f5565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610f0093929190611ee8565b6020604051808303816000875af1158015610f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f439190611e29565b50505050565b600080610f54611019565b9050610f61818585611276565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611090576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108790611f91565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f690612023565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516111dd9190611a10565b60405180910390a3505050565b60006111f68484610f92565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146112705781811015611262576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112599061208f565b60405180910390fd5b61126f8484848403611021565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dc90612121565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134b906121b3565b60405180910390fd5b61135f83838361182d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156113e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dc90612245565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114789190611c58565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114dc9190611a10565b60405180910390a36114ef848484611832565b50505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155e906122d7565b60405180910390fd5b6115738260008361182d565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156115f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f090612369565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546116509190612389565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516116b59190611a10565b60405180910390a36116c983600084611832565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361173d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173490612409565b60405180910390fd5b6117496000838361182d565b806002600082825461175b9190611c58565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117b09190611c58565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118159190611a10565b60405180910390a361182960008383611832565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611871578082015181840152602081019050611856565b83811115611880576000848401525b50505050565b6000601f19601f8301169050919050565b60006118a282611837565b6118ac8185611842565b93506118bc818560208601611853565b6118c581611886565b840191505092915050565b600060208201905081810360008301526118ea8184611897565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611922826118f7565b9050919050565b61193281611917565b811461193d57600080fd5b50565b60008135905061194f81611929565b92915050565b6000819050919050565b61196881611955565b811461197357600080fd5b50565b6000813590506119858161195f565b92915050565b600080604083850312156119a2576119a16118f2565b5b60006119b085828601611940565b92505060206119c185828601611976565b9150509250929050565b60008115159050919050565b6119e0816119cb565b82525050565b60006020820190506119fb60008301846119d7565b92915050565b611a0a81611955565b82525050565b6000602082019050611a256000830184611a01565b92915050565b600080600060608486031215611a4457611a436118f2565b5b6000611a5286828701611940565b9350506020611a6386828701611940565b9250506040611a7486828701611976565b9150509250925092565b600060ff82169050919050565b611a9481611a7e565b82525050565b6000602082019050611aaf6000830184611a8b565b92915050565b600060208284031215611acb57611aca6118f2565b5b6000611ad984828501611976565b91505092915050565b600060208284031215611af857611af76118f2565b5b6000611b0684828501611940565b91505092915050565b6000819050919050565b6000611b34611b2f611b2a846118f7565b611b0f565b6118f7565b9050919050565b6000611b4682611b19565b9050919050565b6000611b5882611b3b565b9050919050565b611b6881611b4d565b82525050565b6000602082019050611b836000830184611b5f565b92915050565b60008060408385031215611ba057611b9f6118f2565b5b6000611bae85828601611940565b9250506020611bbf85828601611940565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c1057607f821691505b602082108103611c2357611c22611bc9565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c6382611955565b9150611c6e83611955565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ca357611ca2611c29565b5b828201905092915050565b611cb781611917565b82525050565b6000602082019050611cd26000830184611cae565b92915050565b600081519050611ce78161195f565b92915050565b600060208284031215611d0357611d026118f2565b5b6000611d1184828501611cd8565b91505092915050565b6000611d2582611955565b9150611d3083611955565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d6957611d68611c29565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611dae82611955565b9150611db983611955565b925082611dc957611dc8611d74565b5b828204905092915050565b6000604082019050611de96000830185611cae565b611df66020830184611a01565b9392505050565b611e06816119cb565b8114611e1157600080fd5b50565b600081519050611e2381611dfd565b92915050565b600060208284031215611e3f57611e3e6118f2565b5b6000611e4d84828501611e14565b91505092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611eb2602583611842565b9150611ebd82611e56565b604082019050919050565b60006020820190508181036000830152611ee181611ea5565b9050919050565b6000606082019050611efd6000830186611cae565b611f0a6020830185611cae565b611f176040830184611a01565b949350505050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611f7b602483611842565b9150611f8682611f1f565b604082019050919050565b60006020820190508181036000830152611faa81611f6e565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061200d602283611842565b915061201882611fb1565b604082019050919050565b6000602082019050818103600083015261203c81612000565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612079601d83611842565b915061208482612043565b602082019050919050565b600060208201905081810360008301526120a88161206c565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061210b602583611842565b9150612116826120af565b604082019050919050565b6000602082019050818103600083015261213a816120fe565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061219d602383611842565b91506121a882612141565b604082019050919050565b600060208201905081810360008301526121cc81612190565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061222f602683611842565b915061223a826121d3565b604082019050919050565b6000602082019050818103600083015261225e81612222565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b60006122c1602183611842565b91506122cc82612265565b604082019050919050565b600060208201905081810360008301526122f0816122b4565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612353602283611842565b915061235e826122f7565b604082019050919050565b6000602082019050818103600083015261238281612346565b9050919050565b600061239482611955565b915061239f83611955565b9250828210156123b2576123b1611c29565b5b828203905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006123f3601f83611842565b91506123fe826123bd565b602082019050919050565b60006020820190508181036000830152612422816123e6565b905091905056fea2646970667358221220514ee5ebab4372380e3024408a2fd15fdc933de5fe131fb68ac360880eceecca64736f6c634300080d0033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _pilot: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(_pilot, overrides || {}) as Promise<Staking>;
  }
  getDeployTransaction(
    _pilot: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pilot, overrides || {});
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
